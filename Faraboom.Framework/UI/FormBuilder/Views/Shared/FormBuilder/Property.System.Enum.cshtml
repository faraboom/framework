@using System
@using System.Collections.Generic
@using Faraboom.Framework.UI.FormBuilder
@model PropertyViewModel
@{ var choices = (IEnumerable<Tuple<string, object>>)Model.Choices ?? Model.Type.GetChoicesForEnumType(); }
@if (Model.Readonly)
{
<input type="text" class="form-control" name="@Model.Name" @Html.Raw(Model.Readonly?"readonly=\"readonly\"":"") @Html.Raw(Model.Disabled?"disabled=\"disabled\"":"") value="@Model.Value" /> }
            else
            {
<select class="form-control" name="@Model.Name" @Html.Raw(Model.Readonly?"readonly=\"readonly\"":"") @Html.Raw(Model.Disabled?"disabled=\"disabled\"":"")>
    @if (Nullable.GetUnderlyingType(Model.Type) != null)
    {
<option value="" @Html.Raw((Model.Value == null).Attr("selected"))></option>}
    @foreach (var choice in choices)
    {
        var selected = (Model.Value != null && Model.Value.ToString() == choice.Item2.ToString());
<option value="@choice.Item2" @Html.Raw(selected.Attr("selected"))>@choice.Item1</option>}
</select>}

@using System
@using Faraboom.Framework.UI.FormBuilder
@using Faraboom.Framework.UI.FormBuilder.ViewHelpers

@model PropertyViewModel
@if (Model.Choices != null && !Model.Readonly)
{
    ObjectChoices[] choices = Html.Choices(Model);
    if (choices.Length > 1)
    {
<div class="fb-choices-area">
    @{ var selectedIndex = Faraboom.Framework.UI.FormBuilder.ViewHelpers.Object.GetSelectedIndex(choices);
        var useRadio = Faraboom.Framework.UI.FormBuilder.ViewHelpers.Object.UseRadio(Model);

        if (!useRadio)
        {
<div>
    <select class="fb-choice-picker form-control" @Model.Disabled()>
        @for (int i = 0; i < choices.Length; i++)
        {
            var selctedAtt = ((i == selectedIndex) ? "selected=\"selected\"" : "");
            var text = choices[i] == null ? "None" : choices[i].name;
            var option = $@"<option value=""{i}"" {selctedAtt}>{text}</option>";
@Html.Raw(option);
}
    </select>
</div> } }
    <div class="fb-choices">
        @{ var radioGroupName = Guid.NewGuid().ToString();
            for (int i = 0; i < choices.Length; i++)
            {
                var choice = choices[i];
                var obj = choices[i].obj;
                var isSelected = (i == selectedIndex);
                var isDisabled = Model.Disabled | !isSelected;
<div class="fb-choice " @Html.Raw((useRadio || isSelected) ? "" : "style='display:none'")>
    <div class="radio">
        <input type="radio" class="fb-choice-selector " @Html.Raw(!useRadio ? "style='display:none'" : "") name="@radioGroupName" @Html.Raw(isSelected.Attr("checked", null)) @Model.Disabled.Attr("disabled", null) />
        <div @Html.Raw(useRadio ? "class=\"radio-block\"" : "")>
            @if (useRadio)
            {
<div class="fb-choice-name">@(obj == null ? "None" : choice.name)</div>}
            @foreach (var p in choice.properties)
            {
                p.Disabled |= isDisabled;
@Html.Partial("FormBuilder/Form.Property", p);
}
        </div>
    </div>
</div> } }
    </div>
</div> }
else
{
foreach (var choice in choices)
{
    foreach (var p in choice.properties)
    {
@Html.Partial("FormBuilder/Form.Property", p) }
}
}
}
else
{
var properties = FB.PropertiesFor(Model.Value);
foreach (var p in properties)
{
p.Name = Model.Name == null ? p.Name : Model.Name + "." + p.Name;
@Html.Partial("FormBuilder/Form.Property", p);
}
}

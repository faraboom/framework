@using Faraboom.Framework.UI.FormBuilder.Attributes
@using System.Linq;
@using Faraboom.Framework.UI.FormBuilder
@model PropertyViewModel
@{
    var posted = ((Model.Value as bool? ?? bool.Parse((Model.Value as string ?? "false"))));
}  
@if (Model.GetCustomAttributes().OfType<LabelOnRightAttribute>().Any())
{
    <label class="checkbox">
        @if (Model.GetCustomAttributes().OfType<RequiredAttribute>
            ().Any())
            {
            <input @Html.Raw(Model.Readonly?"readonly=\"readonly\"":"") @Html.Raw(Model.Disabled?"disabled=\"disabled\"":"") @Html.UnobtrusiveValidation(Model) type="checkbox" id="@Model.Id" name="@Model.Name" value="true" @Html.Raw(posted.Attr("checked")) />
            }
            else //if not required, then it is possible to post a false value, which means we need a hidden field as unchecked checkboxes aren't posted. sigh.
            {
            <input type='hidden' @Html.Raw(Model.Disabled?"disabled=\"disabled\"":"") value='@posted.ToString().ToLower()' id="hidden-@Model.Id" name='@Model.Name' />
            <input @Html.Raw(Model.Readonly?"readonly=\"readonly\"":"") @Html.Raw(Model.Disabled?"disabled=\"disabled\"":"") @Html.UnobtrusiveValidation(Model) type="checkbox" id="@Model.Id" value="true" @Html.Raw(posted.Attr("checked")) onchange=" javascript: document.getElementById('hidden-@Model.Id').value=this.checked; " />
            }
            @Html.Raw(Model.DisplayName)
</label>
}
else
{
    if (Model.GetCustomAttributes().OfType<RequiredAttribute>().Any())
    {
        <input @Html.Raw(Model.Readonly?"readonly=\"readonly\"":"") @Html.Raw(Model.Disabled?"disabled=\"disabled\"":"") @Html.UnobtrusiveValidation(Model) type="checkbox" id="@Model.Id" name="@Model.Name" value="true" @Html.Raw(posted.Attr("checked")) />
    }
    else //if not required, then it is possible to post a false value, which means we need a hidden field as unchecked checkboxes aren't posted. sigh.
    {
        <input type='hidden' @Html.Raw(Model.Disabled?"disabled=\"disabled\"":"") value='@posted.ToString().ToLower()' id="hidden-@Model.Id" name='@Model.Name' />
        <input @Html.Raw(Model.Readonly?"readonly=\"readonly\"":"") @Html.Raw(Model.Disabled?"disabled=\"disabled\"":"") @Html.UnobtrusiveValidation(Model) type="checkbox" id="@Model.Id" value="true" @Html.Raw(posted.Attr("checked")) onchange=" javascript: document.getElementById('hidden-@Model.Id').value=this.checked; " />
    }
}

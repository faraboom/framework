@using Faraboom.Framework.UI.FormBuilder.Attributes
@using Faraboom.Framework.UI.FormBuilder
@using System.Linq
@model PropertyViewModel
@{ if (Model.IsHidden)
                {
    <div style="display: none">@Html.BestProperty(Model)</div> }
else
{
    if (Model.IsHidden)
    {
<div style="display: none">@Html.BestProperty(Model)</div> }
else
{
var validClass = Html.HasErrors(Model.Name) ? "error" : "valid";
<div class="form-group has-@validClass">
    @if (!Model.HasAttribute<NoLabelAttribute>() && !Model.HasAttribute<LabelOnRightAttribute>())
    {
        var required = Model.NotOptional ?? (Model.Readonly
                                                  || Model.HasAttribute<Faraboom.Framework.DataAnnotation.RequiredAttribute>()
                                                  || Model.Choices != null);
        var optionalText = required ? "" : "<span class='is-optional-hint'> (optional)</span>";

<label class="control-label" for="@Model.Id">@Model.DisplayName()@Html.Raw(optionalText)</label>}

    @Html.BestProperty(Model)
    <span class="help-block">
        <span class="field-validation-@validClass" data-valmsg-for="@Model.Name" data-valmsg-replace="true">
            @Html.AllValidationMessages(Model.Name)
        </span>
        @(Model.GetCustomAttributes().OfType<Faraboom.Framework.DataAnnotation.DescriptionAttribute>().Select(a => a.Description).SingleOrDefault())
    </span>
</div> }
} }